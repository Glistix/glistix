---
source: compiler-core/src/nix/tests/functions.rs
expression: "\npub fn int_identity(i: Int) -> Int { i }\npub const int_identity_alias: fn(Int) -> Int = int_identity\npub fn use_int_identity_alias() { int_identity_alias(42) }\n\npub const compound: #(fn(Int) -> Int, fn(Int) -> Int) = #(int_identity, int_identity_alias)\npub fn use_compound() { compound.0(compound.1(42)) }"
---
let
  int_identity = i: i;
  
  int_identity_alias = int_identity;
  
  use_int_identity_alias = {}: int_identity_alias 42;
  
  compound = [ int_identity int_identity_alias ];
  
  use_compound =
    {}: (builtins.elemAt compound 0) ((builtins.elemAt compound 1) 42);
in
  {
    inherit
      int_identity
      int_identity_alias
      use_int_identity_alias
      compound
      use_compound;
  }
