---
source: compiler-core/src/nix/tests/basic.rs
expression: "\nimport mymod\n\npub const inherit = 5\n\npub type Bad {\n  Bad(inherit: Bool)\n}\n\npub fn guard(x) {\n  let b = Bad(inherit: True)\n  case x {\n    Nil if mymod.inherit -> 1\n    Nil if b.inherit -> 2\n    Nil if Bad(inherit: True) == Bad(inherit: False) -> 3\n    Nil if 5 > 6 -> 4\n    _ -> 5\n  }\n}\n"
---
let
  mod''mymod = builtins.import ./../mymod.nix;
  
  Bad = inherit': { __gleam_tag' = "Bad"; inherit inherit'; };
  
  guard =
    x:
      let
        b = Bad true;
      in
        if x == null && (mod''mymod.inherit')
        then 1
        else if x == null && (b.inherit')
        then 2
        else if x == null && ((Bad true) == (Bad false))
        then 3
        else if x == null && (5 > 6)
        then 4
        else 5;
  
  inherit' = 5;
in { inherit Bad guard inherit'; }
