---
source: compiler-core/src/nix/tests/externals.rs
expression: "\n@external(nix, \"./a\", \"inspect\")\nfn current_dir_path(x: anything) -> Nil\n\n@external(nix, \".\", \"inspect\")\nfn current_dir(x: anything) -> Nil\n\n@external(nix, \"./\", \"inspect\")\nfn current_dir_slash(x: anything) -> Nil\n\n@external(nix, \"../a\", \"inspect\")\nfn top_dir_path(x: anything) -> Nil\n\n@external(nix, \"..\", \"inspect\")\nfn top_dir(x: anything) -> Nil\n\n@external(nix, \"../\", \"inspect\")\nfn top_dir_slash(x: anything) -> Nil\n\n@external(nix, \"./..\", \"inspect\")\nfn curr_dir_top_dir(x: anything) -> Nil\n\n"
snapshot_kind: text
---
----- SOURCE CODE

@external(nix, "./a", "inspect")
fn current_dir_path(x: anything) -> Nil

@external(nix, ".", "inspect")
fn current_dir(x: anything) -> Nil

@external(nix, "./", "inspect")
fn current_dir_slash(x: anything) -> Nil

@external(nix, "../a", "inspect")
fn top_dir_path(x: anything) -> Nil

@external(nix, "..", "inspect")
fn top_dir(x: anything) -> Nil

@external(nix, "../", "inspect")
fn top_dir_slash(x: anything) -> Nil

@external(nix, "./..", "inspect")
fn curr_dir_top_dir(x: anything) -> Nil



----- COMPILED NIX
let
  current_dir = (builtins.import ./.).inspect;
  current_dir_slash = (builtins.import ./.).inspect;
  top_dir = (builtins.import ./..).inspect;
  curr_dir_top_dir = (builtins.import ./..).inspect;
  top_dir_slash = (builtins.import ./../.).inspect;
  top_dir_path = (builtins.import ./../a).inspect;
  current_dir_path = (builtins.import ./a).inspect;
in
{ }
