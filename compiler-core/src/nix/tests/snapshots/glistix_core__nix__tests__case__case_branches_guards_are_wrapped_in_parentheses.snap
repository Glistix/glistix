---
source: compiler-core/src/nix/tests/case.rs
expression: "\nfn anything() -> a {\n  case [] {\n    [a] if False || True -> a\n    _ -> anything()\n  }\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

fn anything() -> a {
  case [] {
    [a] if False || True -> a
    _ -> anything()
  }
}


----- COMPILED NIX
let
  inherit (builtins.import ./../gleam.nix) toList listHasLength;
  
  anything =
    { }:
    let
      _pat' = toList [ ];
    in
    if listHasLength _pat' 1 && (false || true) then let a = _pat'.head; in a
    else anything { };
in
{ }
