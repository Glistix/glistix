---
source: compiler-core/src/nix/tests/bools.rs
expression: "\nfn go(x, y) {\n  let assert True = x\n  let assert False = x\n  let assert Nil = y\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

fn go(x, y) {
  let assert True = x
  let assert False = x
  let assert Nil = y
}


----- COMPILED NIX
let
  inherit (builtins.import ./../gleam.nix) makeError seqAll;
  
  go =
    x: y:
    let
      _assert' =
        if !x then
          builtins.throw
            (makeError
              "let_assert"
              "my/mod"
              3
              "go"
              "Pattern match failed, no pattern matched the value."
              { value = x; })
        else null;
      _' = builtins.seq _assert' x;
      _assert''1 =
        if x then
          builtins.throw
            (makeError
              "let_assert"
              "my/mod"
              4
              "go"
              "Pattern match failed, no pattern matched the value."
              { value = x; })
        else null;
      _'1 = builtins.seq _assert''1 x;
    in
    seqAll
      [ _' _assert' _'1 _assert''1 ]
      (if y != null then
        builtins.throw
          (makeError
            "let_assert"
            "my/mod"
            5
            "go"
            "Pattern match failed, no pattern matched the value."
            { value = y; })
      else y);
in
{ }
