//! This file is generated by build.rs
//! Do not edit it directly, instead add new test cases to ./cases

use gleam_core::build::Mode;

#[rustfmt::skip]
#[test]
fn with_dep_dev() {
    let output = crate::prepare("./cases/with_dep", Mode::Dev);
    insta::assert_snapshot!(
        "with_dep_dev",
        output,
        "./cases/with_dep",
    );
}

#[rustfmt::skip]
#[test]
fn with_dep_prod() {
    let output = crate::prepare("./cases/with_dep", Mode::Prod);
    insta::assert_snapshot!(
        "with_dep_prod",
        output,
        "./cases/with_dep",
    );
}

#[rustfmt::skip]
#[test]
fn with_dep_lsp() {
    let output = crate::prepare("./cases/with_dep", Mode::Lsp);
    insta::assert_snapshot!(
        "with_dep_lsp",
        output,
        "./cases/with_dep",
    );
}

#[rustfmt::skip]
#[test]
fn with_dev_dep_dev() {
    let output = crate::prepare("./cases/with_dev_dep", Mode::Dev);
    insta::assert_snapshot!(
        "with_dev_dep_dev",
        output,
        "./cases/with_dev_dep",
    );
}

#[rustfmt::skip]
#[test]
fn with_dev_dep_prod() {
    let output = crate::prepare("./cases/with_dev_dep", Mode::Prod);
    insta::assert_snapshot!(
        "with_dev_dep_prod",
        output,
        "./cases/with_dev_dep",
    );
}

#[rustfmt::skip]
#[test]
fn with_dev_dep_lsp() {
    let output = crate::prepare("./cases/with_dev_dep", Mode::Lsp);
    insta::assert_snapshot!(
        "with_dev_dep_lsp",
        output,
        "./cases/with_dev_dep",
    );
}
