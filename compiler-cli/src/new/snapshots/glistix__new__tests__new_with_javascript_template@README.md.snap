---
source: compiler-cli/src/new/tests.rs
expression: "crate::fs::read(Utf8PathBuf::from_path_buf(file_path.to_path_buf()).expect(\"Non Utf8 Path\"),).unwrap()"
snapshot_kind: text
---
# my_project

[![Package Version](https://img.shields.io/hexpm/v/my_project)](https://hex.pm/packages/my_project)
[![Hex Docs](https://img.shields.io/badge/hex-docs-ffaff3)](https://hexdocs.pm/my_project/)

```sh
glistix add my_project@1
```
```gleam
import my_project

pub fn main() {
  // TODO: An example of the project in use
}
```

**Note:** This is a Glistix project, and as such may require the
[Glistix compiler](https://github.com/glistix/glistix) to be used.

Further documentation can be found at <https://hexdocs.pm/my_project>.

## Importing from Nix

To import this project from Nix, first fetch its source (through a Flake input,
using `builtins.fetchGit`, cloning to a local path, or some other way), import
the Flake or the `default.nix` file, and run `lib.loadGlistixPackage { }`.
For example:

```nix
let
  # Assuming the project was cloned to './path/to/project'
  my_project = import ./path/to/project;
  # Use 'loadGlistixPackage { module = "module/name"; }' to pick a module
  package = my_project.lib.loadGlistixPackage { };
  result = package.main { };
in result
```

## Development

```sh
nix develop   # Optional: Spawn a shell with glistix
glistix run   # Run the project
glistix test  # Run the tests
```
